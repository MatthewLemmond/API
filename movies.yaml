apiVersion: apps/v1
kind: Deployment
metadata:
  name: moviesapp
  labels:
    app: moviesapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moviesapp
  template:
    metadata:
      labels:
        app: moviesapp
    spec:
      containers:
      - name: moviesapp
        image: matthewlemmond/python_api:latest
        ports:
          - containerPort: 5000
        imagePullPolicy: Always
        env:
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodbb-ae7da678
              key: mongodb-root-password
---
apiVersion: v1
kind: Service
metadata:
  name: movies-svc
  labels:
    app: moviesapp
spec:
  selector:
    app: moviesapp
  ports:
    - port: 80
      targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: movies-ingress-resource
  labels:
    app: moviesapp
  annotations:
    kubernetes.io/ingress.class: "public-iks-k8s-nginx"
spec:
  tls:
  - hosts:
    - new-year-new-me-3d0a5ecdb24e7aee232dcd4c16f5380e-0000.us-south.containers.appdomain.cloud
    secretName: new-year-new-me-3d0a5ecdb24e7aee232dcd4c16f5380e-0000
  rules:
  - host: new-year-new-me-3d0a5ecdb24e7aee232dcd4c16f5380e-0000.us-south.containers.appdomain.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: movies-svc
            port:
              number: 80
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: nginx-auth
            port:
              number: 80